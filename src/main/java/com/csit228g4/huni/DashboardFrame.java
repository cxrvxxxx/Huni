/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.csit228g4.huni;

import java.awt.event.WindowEvent;
import java.awt.event.WindowAdapter;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Brent
 */
public class DashboardFrame extends javax.swing.JFrame {
    private DBHelper dbh;
    /**
     * Creates new form DashboardFrame
     */
    public DashboardFrame() {
        initComponents();
        
        dbh = new DBHelper();
        dbh.connectdb();
        
        this.setTitle("Dashboard - Huni");
        this.setDefaultCloseOperation(javax.swing.JFrame.EXIT_ON_CLOSE);
        this.setLocationRelativeTo(null);
        
        lblGreeting.setText("Welcome, " + Session.activeUser.getUsername());
        populatePlaylistTable();
        populatePlaylistSongTable("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblGreeting = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jSchollPane1 = new javax.swing.JScrollPane();
        tblPlaylist = new javax.swing.JTable();
        btnNewPlaylist = new javax.swing.JButton();
        btnDeletePlaylist = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPlaylistSong = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        btnRemoveSong = new javax.swing.JButton();
        btnAddSong = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        lblGreeting.setText("Welcome, user");

        jLabel1.setText("My Playlists");

        tblPlaylist.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Name", "Date Created"
            }
        ));
        jSchollPane1.setViewportView(tblPlaylist);

        btnNewPlaylist.setText("New Playlist");
        btnNewPlaylist.setFocusable(false);
        btnNewPlaylist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewPlaylistActionPerformed(evt);
            }
        });

        btnDeletePlaylist.setText("Delete");
        btnDeletePlaylist.setEnabled(false);
        btnDeletePlaylist.setFocusable(false);
        btnDeletePlaylist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeletePlaylistActionPerformed(evt);
            }
        });

        tblPlaylistSong.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Title", "Artist", "Date Added"
            }
        ));
        jScrollPane1.setViewportView(tblPlaylistSong);

        jLabel2.setText("Songs in Playlist");

        btnRemoveSong.setText("Remove");
        btnRemoveSong.setFocusable(false);

        btnAddSong.setText("Add Song");
        btnAddSong.setEnabled(false);
        btnAddSong.setFocusable(false);
        btnAddSong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddSongActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(lblGreeting))
                        .addGap(176, 176, 176))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(btnDeletePlaylist)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnNewPlaylist))
                        .addComponent(jSchollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAddSong)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnRemoveSong))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblGreeting)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSchollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNewPlaylist)
                    .addComponent(btnDeletePlaylist)
                    .addComponent(btnRemoveSong)
                    .addComponent(btnAddSong))
                .addContainerGap(36, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNewPlaylistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewPlaylistActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        NewPlaylistFrame newPlaylistFrame = new NewPlaylistFrame();
        newPlaylistFrame.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                showDashboardFrame();
            }
        });
        newPlaylistFrame.setVisible(true);
    }//GEN-LAST:event_btnNewPlaylistActionPerformed

    private void btnDeletePlaylistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeletePlaylistActionPerformed
        // TODO add your handling code here:
        String name = tblPlaylist.getValueAt(tblPlaylist.getSelectedRow(), 0).toString();
        int res = dbh.deletePlaylist(name);
        
        switch (res) {
            case 1 -> javax.swing.JOptionPane.showMessageDialog(this.getContentPane(), "Deleted playlist '" + name + "'.");
            default -> javax.swing.JOptionPane.showMessageDialog(this.getContentPane(), "Cannot delete playlist");
        }
        
        populatePlaylistTable();
    }//GEN-LAST:event_btnDeletePlaylistActionPerformed

    private void btnAddSongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddSongActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        String playlistName = tblPlaylist.getValueAt(tblPlaylist.getSelectedRow(), 0).toString();
        Playlist pl = dbh.getPlaylist(playlistName);
        AddSongFrame addSongFrame = new AddSongFrame(pl.getId());
        addSongFrame.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                showDashboardFrame();
            }
        });
        addSongFrame.setVisible(true);
    }//GEN-LAST:event_btnAddSongActionPerformed
    
    private void populatePlaylistTable() {
        DefaultTableModel tableModel = new DefaultTableModel();
        tableModel.addColumn("Name");
        tableModel.addColumn("Date Created");
        
        ArrayList<Playlist> playlists = dbh.getAllPlaylists();
        for (Playlist pl : playlists) {
            Object[] row = { pl.getName(), pl.getCreatedOn() };
            tableModel.addRow(row);
        }
        
        tblPlaylist.setModel(tableModel);
        tblPlaylist.setDefaultEditor(Object.class, null);
        
        tblPlaylist.getSelectionModel().addListSelectionListener(e -> {
            if (!e.getValueIsAdjusting()) {
                btnDeletePlaylist.setEnabled(tblPlaylist.getSelectedRow() != -1);
                if (tblPlaylist.getSelectedRow() != -1) {
                    btnAddSong.setEnabled(tblPlaylist.getSelectedRow() != -1);
                    populatePlaylistSongTable(tblPlaylist.getModel().getValueAt(tblPlaylist.getSelectedRow(), 0).toString());
                }
            }
        });
    }
    
    private void populatePlaylistSongTable(String playlistName) {
        DefaultTableModel tableModel = new DefaultTableModel();
        tableModel.addColumn("Title");
        tableModel.addColumn("Artist");
        tableModel.addColumn("Date Added");
        
        if (!playlistName.equals("")) {
            Playlist pl = dbh.getPlaylist(playlistName);
            ArrayList<Song> songs = dbh.getAllSongsFromPlaylist(pl.getName());
            for (Song song : songs) {
                Object[] row = { song.getTitle(), song.getAuthor(), pl.getCreatedOn() };
                tableModel.addRow(row);
            }
        }
        
        tblPlaylistSong.setModel(tableModel);
        tblPlaylistSong.setDefaultEditor(Object.class, null);
        
        tblPlaylistSong.getSelectionModel().addListSelectionListener(e -> {
            // Add delete button handling here
        });
    }
    
    private void showDashboardFrame() {
        this.setVisible(true);
        populatePlaylistTable();
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DashboardFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DashboardFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DashboardFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DashboardFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DashboardFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddSong;
    private javax.swing.JButton btnDeletePlaylist;
    private javax.swing.JButton btnNewPlaylist;
    private javax.swing.JButton btnRemoveSong;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jSchollPane1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblGreeting;
    private javax.swing.JTable tblPlaylist;
    private javax.swing.JTable tblPlaylistSong;
    // End of variables declaration//GEN-END:variables
}
